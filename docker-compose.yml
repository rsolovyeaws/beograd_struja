services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis_cache
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]  # Enable AOF persistence
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  beograd_struja_app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POETRY_VIRTUALENVS_CREATE=false
    env_file:
      - ./telegram_app/.env
    volumes:
          - .:/app
          - logs_volume:/app/logs
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy


volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  logs_volume:
    driver: local
