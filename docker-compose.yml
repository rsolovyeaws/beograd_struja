services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  redis:
    image: redis:7
    container_name: redis_cache
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]  # Enable AOF persistence
    volumes:
      - redis_data:/data
  
  beograd_struja_app:
    image: python:3.10-slim
    container_name: beograd_struja_app
    build:
      context: .
      dockerfile: Dockerfile  # Custom Dockerfile to manage dependencies
    environment:
      - POETRY_VIRTUALENVS_CREATE=false
    env_file:
      - ./telegram_app/.env
    volumes:
      - .:/app
    working_dir: /app
    # command: >
    #   sh -c "python3 bot_state_main.py &
    #   celery -A telegram_app.celery_app.celery_app.app worker --loglevel=info &
    #   celery -A telegram_app.celery_app.celery_app.app beat --loglevel=info"
    depends_on:
      - postgres
      - redis

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local